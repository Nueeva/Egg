{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-05-12T12:00:00+07:00",
    "name": "Â©Nueva`",
    "author": "admin@nueva.my.id",
    "description": "Nueva WhatsApp Bot Panel\r\nAn advanced WhatsApp Bot management panel built with support for multiple Node.js versions (14, 16, 18, 20). Powered by PM2 process manager to ensure high availability with auto-restart capabilities and real-time monitoring. This panel provides an intuitive interface for managing WhatsApp bots with enhanced stability, uptime tracking, and performance analytics. Ideal for businesses and developers who need reliable WhatsApp automation solutions with professional-grade management tools and extensive customization options.",
    "features": [
        "Multi-version Node.js support (14-20)",
        "PM2 process monitoring",
        "Auto-recovery system",
        "Enhanced performance analytics",
        "Seamless git integration"
    ],
    "docker_images": {
        "ghcr.io/nueeva/egg:main": "ghcr.io/nueeva/egg:main"
    },
    "file_denylist": [],
    "startup": "if [[ -d .git ]] && [[ {{AUTO_UPDATE}} == \"1\" ]]; then git pull; fi; if [[ ! -z ${NODE_PACKAGES} ]]; then \/usr\/local\/bin\/npm install ${NODE_PACKAGES}; fi; if [[ ! -z ${UNNODE_PACKAGES} ]]; then \/usr\/local\/bin\/npm uninstall ${UNNODE_PACKAGES}; fi; if [ -f \/home\/container\/package.json ]; then \/usr\/local\/bin\/npm install; fi; pm2 start {{JS_FILE}} --name \"{{SERVER_NAME}}\" {{STARTUP_FLAGS}}; pm2 logs",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"Connection\": \"success\"\r\n}",
        "logs": "{}",
        "stop": "^^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# NodeJS App Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\napt update\r\napt install -y git curl jq file unzip make gcc g++ python3 python3-dev libtool\r\n\r\necho -e \"Updating npm. Please wait...\"\r\nnpm install npm@latest -g\r\n\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server\r\n\r\nif [ \"${USER_UPLOAD}\" == \"true\" ] || [ \"${USER_UPLOAD}\" == \"1\" ]; then\r\n    echo -e \"User upload selected. Proceeding with user-managed installation.\"\r\n    exit 0\r\nfi\r\n\r\n## add git ending if it's not on the address\r\nif [[ ${GIT_ADDRESS} != *.git ]]; then\r\n    GIT_ADDRESS=${GIT_ADDRESS}.git\r\nfi\r\n\r\nif [ -z \"${USERNAME}\" ] && [ -z \"${ACCESS_TOKEN}\" ]; then\r\n    echo -e \"Using anonymous API call\"\r\nelse\r\n    GIT_ADDRESS=\"https:\/\/${USERNAME}:${ACCESS_TOKEN}@$(echo -e ${GIT_ADDRESS} | cut -d\/ -f3-)\"\r\nfi\r\n\r\n## pull git js repo\r\nif [ \"$(ls -A \/mnt\/server)\" ]; then\r\n    echo -e \"\/mnt\/server directory is not empty.\"\r\n    if [ -d .git ]; then\r\n        echo -e \".git directory exists\"\r\n        if [ -f .git\/config ]; then\r\n            echo -e \"Loading info from git config\"\r\n            ORIGIN=$(git config --get remote.origin.url)\r\n        else\r\n            echo -e \"Files found with no git config\"\r\n            echo -e \"Closing out without touching things to prevent data corruption\"\r\n            exit 10\r\n        fi\r\n    fi\r\n\r\n    if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then\r\n        echo \"Pulling latest from repository\"\r\n        git pull\r\n    fi\r\nelse\r\n    echo -e \"\/mnt\/server is empty.\\nCloning files into repo\"\r\n    if [ -z ${BRANCH} ]; then\r\n        echo -e \"Cloning default branch\"\r\n        git clone ${GIT_ADDRESS} .\r\n    else\r\n        echo -e \"Cloning ${BRANCH}'\"\r\n        git clone --single-branch --branch ${BRANCH} ${GIT_ADDRESS} .\r\n    fi\r\n\r\nfi\r\n\r\necho \"Installing nodejs packages\"\r\nif [[ ! -z ${NODE_PACKAGES} ]]; then\r\n    \/usr\/local\/bin\/npm install ${NODE_PACKAGES}\r\nfi\r\n\r\nif [ -f \/mnt\/server\/package.json ]; then\r\n    \/usr\/local\/bin\/npm install --production\r\nfi\r\n\r\necho -e \"Installation complete\"\r\nexit 0",
            "container": "ghcr.io/nueeva/egg:main",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Git Repository URL",
            "description": "URL to your Git repository (HTTPS or SSH)",
            "env_variable": "GIT_ADDRESS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Git Branch",
            "description": "The branch to clone (leave empty for default branch)",
            "env_variable": "BRANCH",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "User Upload",
            "description": "Set to 1 to enable user file uploads instead of Git",
            "env_variable": "USER_UPLOAD",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|in:0,1",
            "field_type": "text"
        },
        {
            "name": "Auto Update",
            "description": "Set to 1 to automatically update from Git on startup",
            "env_variable": "AUTO_UPDATE",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|in:0,1",
            "field_type": "text"
        },
        {
            "name": "Main JS File",
            "description": "The main JavaScript file to run with PM2",
            "env_variable": "JS_FILE",
            "default_value": "index.js",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Node.js Version",
            "description": "Specify Node.js version (14, 16, 18, 20)",
            "env_variable": "NODE_VERSION",
            "default_value": "20",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:14,16,18,20",
            "field_type": "text"
        },
        {
            "name": "Server Name",
            "description": "Name of your PM2 process",
            "env_variable": "SERVER_NAME",
            "default_value": "nuevabot",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "PM2 Startup Flags",
            "description": "Additional PM2 startup flags (optional)",
            "env_variable": "STARTUP_FLAGS",
            "default_value": "--watch",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "NPM Packages to Install",
            "description": "Space-separated list of npm packages to install",
            "env_variable": "NODE_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "NPM Packages to Uninstall",
            "description": "Space-separated list of npm packages to uninstall",
            "env_variable": "UNNODE_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Git Username",
            "description": "Username for private Git repositories",
            "env_variable": "USERNAME",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Git Access Token",
            "description": "Access token for private Git repositories",
            "env_variable": "ACCESS_TOKEN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        }
    ]
}