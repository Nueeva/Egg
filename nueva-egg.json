{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-05-12T12:00:00+07:00",
    "name": "©Nueva Developer",
    "author": "admin@nueva.my.id",
    "description": "Nueva Developer Node.js Panel with Multi-Version Support (20-22)\r\n\r\nThis panel is built with Ubuntu 22.04 and offers support for modern Node.js versions (20-22) to provide maximum flexibility and performance for your applications. The panel is powered by PM2, a robust process manager that ensures your applications run with high stability, automatic restarts, and real-time monitoring capabilities.\r\n\r\nFeatures:\r\n• Multiple Node.js versions (20, 22) available via NVM\r\n• Advanced system monitoring and beautiful system information display\r\n• Full development environment with essential tools pre-installed\r\n• Support for npm, yarn, and pnpm package managers\r\n• Enhanced security and performance optimizations\r\n• Beautiful UI with color-coded information display\r\n\r\nIdeal for web applications, APIs, Discord bots, WhatsApp bots, Telegram bots, and any Node.js project requiring a stable and flexible runtime environment.",
    "features": [
        "Multi-Node.js Version Support",
        "PM2 Process Management",
        "Advanced System Monitoring",
        "Full Development Tools",
        "Multiple Package Manager Support"
    ],
    "docker_images": {
        "ghcr.io/nueeva/egg:main": "ghcr.io/nueeva/egg:main"
    },
    "file_denylist": [],
    "startup": "if [[ -d .git ]] && [[ {{AUTO_UPDATE}} == \"1\" ]]; then git pull; fi; if [ -n \"{{NODE_VERSION}}\" ]; then . $NVM_DIR/nvm.sh && nvm use {{NODE_VERSION}} || nvm use default; fi; if [[ ! -z ${NODE_PACKAGES} ]]; then npm install ${NODE_PACKAGES}; fi; if [[ ! -z ${UNNODE_PACKAGES} ]]; then npm uninstall ${UNNODE_PACKAGES}; fi; if [ -f /home/container/package.json ]; then npm install; fi; pm2 start {{JS_FILE}} --name \"{{SERVER_NAME}}\" {{STARTUP_FLAGS}}; pm2 logs",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"Connection\": \"Success\"\r\n}",
        "logs": "{}",
        "stop": "pm2 stop all"
    },
    "scripts": {
        "installation": {
            "script": "#!/bin/bash\n# NodeJS App Installation Script\n#\n# Server Files: /mnt/server\napt update\napt install -y git curl jq file unzip make gcc g++ python3 python3-dev libtool\n\necho -e \"updating npm. please wait...\"\nnpm install npm@latest -g\n\nmkdir -p /mnt/server\ncd /mnt/server\n\nif [ \"${USER_UPLOAD}\" == \"true\" ] || [ \"${USER_UPLOAD}\" == \"1\" ]; then\n    echo -e \"assuming user knows what they are doing have a good day.\"\n    exit 0\nfi\n\n## add git ending if it's not on the address\nif [[ ${GIT_ADDRESS} != *.git ]]; then\n    GIT_ADDRESS=${GIT_ADDRESS}.git\nfi\n\nif [ -z \"${USERNAME}\" ] && [ -z \"${ACCESS_TOKEN}\" ]; then\n    echo -e \"using anon api call\"\nelse\n    GIT_ADDRESS=\"https://${USERNAME}:${ACCESS_TOKEN}@$(echo -e ${GIT_ADDRESS} | cut -d/ -f3-)\"\nfi\n\n## pull git js repo\nif [ \"$(ls -A /mnt/server)\" ]; then\n    echo -e \"/mnt/server directory is not empty.\"\n    if [ -d .git ]; then\n        echo -e \".git directory exists\"\n        if [ -f .git/config ]; then\n            echo -e \"loading info from git config\"\n            ORIGIN=$(git config --get remote.origin.url)\n        else\n            echo -e \"files found with no git config\"\n            echo -e \"closing out without touching things to not break anything\"\n            exit 10\n        fi\n    fi\n\n    if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then\n        echo \"pulling latest from github\"\n        git pull\n    fi\nelse\n    echo -e \"/mnt/server is empty.\\ncloning files into repo\"\n    if [ -z ${BRANCH} ]; then\n        echo -e \"cloning default branch\"\n        git clone ${GIT_ADDRESS} .\n    else\n        echo -e \"cloning ${BRANCH}'\"\n        git clone --single-branch --branch ${BRANCH} ${GIT_ADDRESS} .\n    fi\n\nfi\n\necho \"Installing nodejs packages\"\nif [[ ! -z ${NODE_PACKAGES} ]]; then\n    npm install ${NODE_PACKAGES}\nfi\n\nif [ -f /mnt/server/package.json ]; then\n    npm install --production\nfi\n\necho -e \"install complete\"\nexit 0",
            "container": "ghcr.io/nueeva/egg:main",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Git Repository URL",
            "description": "The Git repository URL to clone from (e.g., https://github.com/username/repo)",
            "env_variable": "GIT_ADDRESS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Git Branch",
            "description": "The branch of the repository to clone (leave empty for default branch)",
            "env_variable": "BRANCH",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Use Uploaded Files",
            "description": "Set to 1 if you want to use uploaded files instead of a Git repository",
            "env_variable": "USER_UPLOAD",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:0,1",
            "field_type": "text"
        },
        {
            "name": "Auto Update",
            "description": "Set to 1 to enable automatic updates from Git repository on server start",
            "env_variable": "AUTO_UPDATE",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:0,1",
            "field_type": "text"
        },
        {
            "name": "Main JavaScript File",
            "description": "The main JavaScript file to run with PM2",
            "env_variable": "JS_FILE",
            "default_value": "index.js",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Node.js Version",
            "description": "Specify the Node.js version to use (20, 22, or leave empty for default)",
            "env_variable": "NODE_VERSION",
            "default_value": "20",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|in:20,22",
            "field_type": "select",
            "field_options": {
                "": "Default (20)",
                "20": "Node.js 20 LTS",
                "22": "Node.js 22"
            }
        },
        {
            "name": "Additional NPM Packages",
            "description": "Additional npm packages to install (space-separated)",
            "env_variable": "NODE_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "NPM Packages to Uninstall",
            "description": "npm packages to uninstall (space-separated)",
            "env_variable": "UNNODE_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Git Username",
            "description": "Git username for private repositories",
            "env_variable": "USERNAME",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Git Access Token",
            "description": "Git access token for private repositories",
            "env_variable": "ACCESS_TOKEN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Server Name",
            "description": "A name for your server process in PM2",
            "env_variable": "SERVER_NAME",
            "default_value": "nueva-app",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:50",
            "field_type": "text"
        },
        {
            "name": "PM2 Startup Flags",
            "description": "Additional flags for PM2 startup (e.g., --watch)",
            "env_variable": "STARTUP_FLAGS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        }
    ]
}